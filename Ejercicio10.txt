10. Generar 30 números aleatorios entre 100 y 1000 guardarlos en un arreglo y calcular estadísticas de
tendencia central media, mediana y moda.

#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <ctime>
#include <cstdlib>

using namespace std;

// Función para generar números aleatorios entre min y max
int generarNumeroAleatorio(int min, int max) {
    return min + rand() % (max - min + 1);
}

// Función para calcular la media
double calcularMedia(const vector<int>& numeros) {
    double suma = 0;
    for (int i = 0; i < numeros.size(); i++) {
        suma += numeros[i];
    }
    return suma / numeros.size();
}

// Función para calcular la mediana
double calcularMediana(vector<int> numeros) {
    sort(numeros.begin(), numeros.end());
    int n = numeros.size();
    if (n % 2 == 0) {
        return (numeros[n/2 - 1] + numeros[n/2]) / 2.0;
    } else {
        return numeros[n/2];
    }
}

// Función para calcular la moda
int calcularModa(const vector<int>& numeros) {
    map<int, int> contador;
    for (int i = 0; i < numeros.size(); i++) {
        contador[numeros[i]]++;
    }
    int moda = 0;
    int maxFrecuencia = 0;
    for (map<int, int>::iterator it = contador.begin(); it != contador.end(); ++it) {
        if (it->second > maxFrecuencia) {
            moda = it->first;
            maxFrecuencia = it->second;
        }
    }
    return moda;
}

int main() {
    srand(static_cast<unsigned int>(time(0))); // Inicializar la semilla aleatoria
    vector<int> numeros;
    for (int i = 0; i < 30; i++) {
        numeros.push_back(generarNumeroAleatorio(100, 1000));
    }
    cout << "Números generados aleatoriamente: ";
    for (int i = 0; i < numeros.size(); i++) {
        cout << numeros[i] << " ";
    }
    cout << endl;
    // Calcular media
    double media = calcularMedia(numeros);
    cout << "Media: " << media << endl;
    // Calcular mediana
    double mediana = calcularMediana(numeros);
    cout << "Mediana: " << mediana << endl;
    // Calcular moda
    int moda = calcularModa(numeros);
    cout << "Moda: " << moda << endl;
    return 0;
}